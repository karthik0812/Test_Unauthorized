{
  "info": {
    "_postman_id": "ff6d44de-b049-4ad4-9fcb-6856a0ee2a1f",
    "name": "LimbicArc_Unauthorized",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "616600e7-e095-4ad4-9890-892988cca5cc",
      "name": "Accounts",
      "description": null,
      "item": [
        {
          "_postman_id": "0795fb1a-426d-477a-aee7-e028eda77612",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7014e5d3-b06f-4b08-86d6-67286ac4a89b",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "8c4c3b3e-75da-4b46-96b8-45ee067d9a22",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorAdmin\" ,\"AdministratorAccountManager\",\"AccountUser\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "780053ef-7bf4-4629-9a91-e5fa5250d35c",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4d1a729-8700-4e87-b1bf-b5c85f448110",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}"
          },
          "response": []
        },
        {
          "_postman_id": "4996185a-0156-48d3-bb8a-4d2d59acd76b",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fbccd0ff-14e6-44b3-a899-5d818c50f617",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "",
                "disabled": true
              },
              {
                "key": "continuation-token",
                "value": "",
                "disabled": true
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/accounts?",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "accounts"
              ],
              "query": [
                {
                  "key": "searchtext",
                  "value": "abcd",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "d4b23842-0ab4-4438-9d9b-bfd01e37768f",
          "name": "Get All Events",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "289308ab-3b7f-4aeb-a7b8-496adeaa0fa6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "",
                "disabled": true
              },
              {
                "key": "continuation-token",
                "value": "",
                "disabled": true
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/events"
          },
          "response": []
        },
        {
          "_postman_id": "b7862173-fedd-4056-a9c3-ef72638610db",
          "name": "Get By Id with Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4d1a729-8700-4e87-b1bf-b5c85f448110",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/withdetails"
          },
          "response": []
        },
        {
          "_postman_id": "86fa0644-c415-4bdd-871f-cdb6dd287e7e",
          "name": "Get Prorated Child Account",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4d1a729-8700-4e87-b1bf-b5c85f448110",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/familyplan/proratedamount"
          },
          "response": []
        },
        {
          "_postman_id": "598f5064-b845-45f4-809c-2671fc51f969",
          "name": "Change Contact Info",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"BusinessName\": \"BusinessName3\",\r\n    \"Phone\": \"+15036200785\",\r\n    \"MailingAddress\": {\r\n      \"Line1\": \"10758 S Ozarks dr\",\r\n      \"Line2\": null,\r\n      \"City\": \"South Jordan\",\r\n      \"Province\": \"Utah\",\r\n      \"PostalCode\": \"84009\",\r\n      \"Country\": \"United States\"\r\n    }\r\n}"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/contactinfo"
          },
          "response": []
        },
        {
          "_postman_id": "4e712a84-c18b-49bb-8861-7b4c35aabd00",
          "name": "Create Identity Token ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/identitytoken"
          },
          "response": []
        },
        {
          "_postman_id": "951d06eb-3f97-4ff0-85c4-13310dcf1fc5",
          "name": "Change Identity",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  "function randString(x){",
                  "    var s = \"\";",
                  "    while(s.length<x&&x>0){",
                  "        var r = Math.random();",
                  "        s+= (r<0.1?Math.floor(r*100):String.fromCharCode(Math.floor(r*26) + (r>0.5?97:65)));",
                  "    }",
                  "    return s;",
                  "}",
                  "",
                  "var  AccountUserEmail = randString(7)+\"@test.com\";",
                  "",
                  "postman.setGlobalVariable(\"AccountUserEmail\",AccountUserEmail);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"IdentityTokenCode\": \"{{identityTokenCode}}\",\r\n    \"PersonName\": {\r\n        \"FirstName\": \"karthik101\",\r\n        \"LastName\": \"kancharla101\"\r\n    },\r\n    \"Email\": \"{{AccountUserEmail}}\"\r\n}"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/identity"
          },
          "response": []
        },
        {
          "_postman_id": "3f016004-98c8-4d8c-9666-6ff604ec47f5",
          "name": "Change Credit Card",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"NameOnCard\": \"Paul Dickinson\",\r\n  \"Card\": {\r\n    \"Number\": \"4000000000000044\",\r\n    \"ExpirationDate\": \"2020-12-22\",\r\n    \"Verification\": \"123\"\r\n  },\r\n  \"BillingAddress\": {\r\n\t  \"Line1\": \"10758 S Ozarks dr\",\r\n\t  \"Line2\": null,\r\n\t  \"City\": \"South Jordan\",\r\n\t  \"Province\": \"Utah\",\r\n\t  \"PostalCode\": \"84009\",\r\n\t  \"Country\": \"United States\"\r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/creditcard"
          },
          "response": []
        },
        {
          "_postman_id": "bcf830c3-f76c-4366-8c18-d8aca53bf2f0",
          "name": "Reactivate Subscription",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"NameOnCard\": \"Paul Dickinson\",\r\n  \"Card\": {\r\n    \"Number\": \"4000000000000028\",\r\n    \"ExpirationDate\": \"2020-12-22\",\r\n    \"Verification\": \"123\"\r\n  },\r\n  \"BillingAddress\": {\r\n\t  \"Line1\": \"10758 S Ozarks dr\",\r\n\t  \"Line2\": null,\r\n\t  \"City\": \"South Jordan\",\r\n\t  \"Province\": \"Utah\",\r\n\t  \"PostalCode\": \"84009\",\r\n\t  \"Country\": \"United States\"\r\n  }\r\n}\r\n"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/reactivate"
          },
          "response": []
        },
        {
          "_postman_id": "823909c9-a2b2-4ffa-9829-b2b93100971b",
          "name": "Process Past Due Subscription",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"CreditCard\": {\r\n    \"NameOnCard\": \"Paul Dickinson\",\r\n    \"Card\": {\r\n      \"Number\": \"4000000000000044\",\r\n      \"ExpirationDate\": \"2019-01-14T07:10:04.587Z\",\r\n      \"Verification\": \"123\"\r\n    },\r\n    \"BillingAddress\": {\r\n      \"Line1\": \"10758 S Ozarks dr\",\r\n      \"Line2\": \"string\",\r\n      \"City\": \"South Jordan\",\r\n      \"Province\": \"Utah\",\r\n      \"PostalCode\": \"234567\",\r\n      \"Country\": \"United States\"\r\n    }\r\n  }\r\n}\r\n\r\n"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/processpastduesubscriptionpayment"
          },
          "response": []
        },
        {
          "_postman_id": "df5c12af-2a33-4459-9c8c-a456d4d6b105",
          "name": "Cancel Subscription",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\r\n{}"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/cancel"
          },
          "response": []
        },
        {
          "_postman_id": "6562f80e-b82d-4c82-927e-0e709559ffdc",
          "name": "Invite Child Account",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  "function randString(x){",
                  "    var s = \"\";",
                  "    while(s.length<x&&x>0){",
                  "        var r = Math.random();",
                  "        s+= (r<0.1?Math.floor(r*100):String.fromCharCode(Math.floor(r*26) + (r>0.5?97:65)));",
                  "    }",
                  "    return s;",
                  "}",
                  "",
                  "var  childAccountEmail = randString(7)+\"@test.com\";",
                  "var  childAccountFirstName = randString(4);",
                  "var  childAccountLastName = randString(6);",
                  "",
                  "postman.setGlobalVariable(\"childAccountEmail\", childAccountEmail);",
                  "postman.setGlobalVariable(\"childAccountFirstName\", childAccountFirstName);",
                  "postman.setGlobalVariable(\"childAccountLastName\", childAccountLastName);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"PersonName\": {\r\n    \"FirstName\": \"{{childAccountFirstName}}\",\r\n    \"LastName\": \"{{childAccountLastName}}\"\r\n  },\r\n  \"Email\": \"{{childAccountEmail}}\",\r\n  \"ProratedAmount\": {{accountProratedAmount}}\r\n}\r\n\r\n"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/familyplan/invitations"
          },
          "response": []
        },
        {
          "_postman_id": "635c10ba-c917-4714-a203-bee8c9035628",
          "name": "Remove Invite Child Account",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/familyplan/invitations/{{childInvite}}"
          },
          "response": []
        },
        {
          "_postman_id": "a1135d06-487d-47ed-bad7-f88602b31e8e",
          "name": "Cancel Child Account",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/familyplan/childaccount/{{childAccountId}}/cancel"
          },
          "response": []
        },
        {
          "_postman_id": "da586363-61d5-4e1c-8434-3cd22173526b",
          "name": "Reactivate Child Account",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "531a1371-d601-476d-b5e5-c98b0d98864b",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              },
              {
                "key": "If-Match",
                "value": "{{accountETag}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"ChildAccountId\": \"{{childAccountId}}\",\r\n  \"ProratedAmount\": 0\r\n}"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/familyplan/childaccounts/reactivate"
          },
          "response": []
        },
        {
          "_postman_id": "5bc08559-43b5-451d-affe-e7974ef06aa4",
          "name": "Get Cancel Scenario",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "018acc9e-2ba5-44a7-aa5f-65c9da0753cb",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/subscription/cancelscenario"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "2cf9d430-b8f3-4b29-9851-a3df04add6c9",
      "name": "Account Emails",
      "description": null,
      "item": [
        {
          "_postman_id": "e98e05c7-5250-437c-b1fa-605e59cfe228",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7014e5d3-b06f-4b08-86d6-67286ac4a89b",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "57cefa3d-0b93-4583-b954-de74f50cbd2d",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"AdministratorAccountManager\",\"SystemAdmin\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "72623c8d-c59b-401f-826f-9dc15907ab17",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "49cbfbc7-d96b-4841-b249-fb6c4ef1cae1",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"EmailTemplate\": {\r\n    \"Id\": \"{{emailTemplateId}}\",\r\n    \"Version\": {{emailTemplateVersion}}\r\n  },\r\n  \"PlaceholderDictionary\": {\r\n  \"{{subject1}}\":\"123\",\r\n     \"{{subject2}}\":\"456\",\r\n    \"{{firstname}}\":\"abc\",\r\n    \"{{lastname}}\":\"def\",\r\n    \"{{terms1}}\":\"abc\",\r\n    \"{{terms2}}\":\"efg\"\r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/emails"
          },
          "response": []
        },
        {
          "_postman_id": "d8267b16-9552-48da-9b7f-b2c7b1d7b52d",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ebddb9c8-ad4a-452e-a2c8-d4aee9feb9b8",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/{{accountId}}/emails/{{accountEmailId}}"
          },
          "response": []
        },
        {
          "_postman_id": "8677d53e-22f0-4e5f-847f-adde81a23544",
          "name": "Get Populated  Email Template By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4bc1996e-369a-4fbf-9426-61ae61893be7",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/abcd/emails/abcd@test.com/populatedemailtemplate"
          },
          "response": []
        },
        {
          "_postman_id": "255589e2-857f-4738-9f85-7f199c0c2b91",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c777389c-43cb-468b-ba7d-50a04356b9d3",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accounts/abcd/emails"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "3bf106bf-aeab-4026-8313-ec5227ad4308",
      "name": "Account Info Sync Runs",
      "description": null,
      "item": [
        {
          "_postman_id": "f5987fc3-a8e9-4400-84b7-383f45cf182b",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6bfe1538-b33e-4c98-baac-c3f2ef211d6f",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "611866d2-671a-4c60-871f-623716325f77",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"AdministratorSystemManager\",\"SystemAdmin\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "a83c9e94-f0b5-4b99-8d6d-3a0e6d524397",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accountinfosyncruns"
          },
          "response": []
        },
        {
          "_postman_id": "7198f6a7-797c-4ee6-87fe-78378f27a50d",
          "name": "Cancel",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accountinfosyncruns/{{accountInfoSyncRunId}}/cancel"
          },
          "response": []
        },
        {
          "_postman_id": "d1d6cb4a-c849-4176-8205-811ea88f17c3",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6f4d7e5-e73d-4f21-bb7f-64d5176ff974",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accountinfosyncruns/{{accountInfoSyncRunId}}"
          },
          "response": []
        },
        {
          "_postman_id": "91212bdf-bec9-4fc3-893f-bc12c3da5b34",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "continuation-token",
                "value": "",
                "disabled": true
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/accountinfosyncruns"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a9d129a5-2446-475a-a65c-145865a69a49",
      "name": "Administrators",
      "description": null,
      "item": [
        {
          "_postman_id": "dac701bd-0e98-4efb-b7af-8040ca5288a2",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b5b1c7e9-3d6c-492b-9dab-1ca6599ee045",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "  postman.setGlobalVariable(\"userId\", jsonData.IdTokenPayload.UserId);",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "0d551e64-9a62-498e-8506-550f479e4af9",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "141bb800-0ea1-4ba7-91c8-c25473266278",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\",\"AdministratorAdmin\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{userIdInvalid}}/token",
            "description": "Api method called: Create\n\nVariable set For : \"id', \"eTag\"\n\nExpect: Created (201)"
          },
          "response": []
        },
        {
          "_postman_id": "bb8fb2e6-d3b4-4468-a6dd-3db7bd2edf82",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c88d810b-cd25-496f-b149-81b46c4cafcf",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \r\n   \"Email\": \"test304@test.com\",\r\n  \"PersonName\": {\r\n    \"FirstName\": \"karthik1\",\r\n    \"LastName\": \"kancharla1\"\r\n  },\r\n  \"Roles\": [\r\n    \"SystemAdmin\",\r\n    \"AdministratorContentManager\"\r\n  ]\r\n}"
            },
            "url": "{{BaseUrl}}/administrators"
          },
          "response": []
        },
        {
          "_postman_id": "6304840f-3d95-4666-9135-4c7f7bc558f1",
          "name": "Change",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "51229c6c-e7e0-4742-9f5f-59466c811623",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{administratorETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\"SystemAdmin\"],\r\n \r\n  \"PersonName\": {\r\n    \"FirstName\": \"Karthik2\",\r\n    \"LastName\": \"Kancharla2\"\r\n  },\r\n  \"Archived\": false\r\n}"
            },
            "url": "{{BaseUrl}}/administrators/{{administratorId}}"
          },
          "response": []
        },
        {
          "_postman_id": "2b155411-856f-4c10-92a5-8532fc56919b",
          "name": "Get By ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec7c423d-84d5-41c2-bf97-dc523af53679",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/administrators/{{administratorId}}"
          },
          "response": []
        },
        {
          "_postman_id": "2ca98234-34bc-4200-9092-d799da7c849d",
          "name": "Get All Events",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e819c7ef-85ec-4adc-9d39-92986d47fc2f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "max-item-count",
                "value": "2",
                "disabled": true
              },
              {
                "key": "continuation-token",
                "value": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/administrators/{{administratorId}}/events"
          },
          "response": []
        },
        {
          "_postman_id": "2e2ecddc-0d57-4c54-846e-d7ed176036fa",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da6a5269-cdbc-4209-913e-7d28f514d074",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "max-item-count",
                "value": "3",
                "disabled": true
              },
              {
                "key": "continuation-token",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/administrators"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "bad55bca-f7f9-4a58-9c2e-1d2d80314143",
      "name": "Agreements",
      "description": null,
      "item": [
        {
          "_postman_id": "5683343c-5033-49b7-a45d-0eb0d3e11a48",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8afb7a2d-9701-4c8e-8732-4364d1adfbd0",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "  postman.setGlobalVariable(\"userId\", jsonData.IdTokenPayload.UserId);",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "40b2169b-f370-47cb-bb8b-00618f3bae80",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9a4e5dc-d4e3-4e60-8cdd-8fb404b54884",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorContentManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{userIdInvalid}}/token",
            "description": "Api method called: Create\n\nVariable set For : \"id', \"eTag\"\n\nExpect: Created (201)"
          },
          "response": []
        },
        {
          "_postman_id": "94edb64e-7170-468d-8bc3-454def0bde84",
          "name": "ADD",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "61ebcf4f-3fed-4bcc-b9b6-c671adbbc13f",
                "exec": [
                  "//postman.setEnvironmentVariable(\"agreementId\", \"test\");"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e2db02c8-c58a-4987-9fc9-840311805601",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Body\": \"Karthik Terms and Condition\",\r\n  \"name\":\"sffdsfd\"\r\n}"
            },
            "url": "{{BaseUrl}}/agreements/karthik2"
          },
          "response": []
        },
        {
          "_postman_id": "dc79ddb5-6ebc-47fb-8dde-314c8cf1418f",
          "name": "Change",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d848749b-c475-4c9d-af16-9ee7eb339c04",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "IIf-Match",
                "value": "{{agreementETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Body\": \"Our New Terms\",\r\n  \"name\":\"sdfdsfs\",\r\n  \"Archived\": true\r\n}"
            },
            "url": "{{BaseUrl}}/agreements/{{agreementId}}"
          },
          "response": []
        },
        {
          "_postman_id": "1e2dd44c-1404-4a34-874d-b62ac10f5feb",
          "name": "Get By ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "25d7a166-db0b-492b-8f04-81863e787b79",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/agreements/finaltesting"
          },
          "response": []
        },
        {
          "_postman_id": "9d9bbeaa-f548-4f32-9a72-a4d07b8d8694",
          "name": "Get By Id and Version",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f47c903f-6764-41cb-8dc0-f6638a62e574",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/agreements/{{agreementId}}/versions/1"
          },
          "response": []
        },
        {
          "_postman_id": "e544f59f-debb-4877-b424-160eafb8363f",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0d6da6d-d274-44d1-8870-cf1778dd50c2",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "10",
                "disabled": true
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/agreements?Archived=false",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "agreements"
              ],
              "query": [
                {
                  "key": "Archived",
                  "value": "false"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "899d8339-571d-4275-afcf-621ca6f1f1b2",
      "name": "Child Transfer",
      "description": null,
      "item": [
        {
          "_postman_id": "21733acd-8b90-476f-a85b-915b46f51807",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6bfe1538-b33e-4c98-baac-c3f2ef211d6f",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "169e1a5b-7dbe-4a0f-8f7e-57d7fca7d0ff",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9a4e5dc-d4e3-4e60-8cdd-8fb404b54884",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorAccountManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{userIdInvalid}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "23f7214a-10d5-4f3c-842a-67e97c2c4f3e",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"InvitationId\": \"{{childInviteId}\"\r\n}\r\n"
            },
            "url": "{{BaseUrl}}/childtransfers"
          },
          "response": []
        },
        {
          "_postman_id": "e9963fe4-884d-4517-ae73-c690ac2269c1",
          "name": "Process",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{childTransferETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childtransfers/{{childTransferId}}/process"
          },
          "response": []
        },
        {
          "_postman_id": "63518092-e985-46e3-8388-2421c2af5f5a",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": ""
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades"
          },
          "response": []
        },
        {
          "_postman_id": "24a64b08-fcbe-4d02-987e-cdeb4a4b9e7d",
          "name": "Get All Events",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f22b84e7-7bca-4f42-a546-0763b9299fa9",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childtransfers/{{childTransferId}}/events"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "657848bd-f101-4a05-b90c-18237d909334",
      "name": "Child Upgrade",
      "description": null,
      "item": [
        {
          "_postman_id": "b95d6c0c-8ec8-4905-aa39-c14250ca8de2",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6bfe1538-b33e-4c98-baac-c3f2ef211d6f",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "358de402-83c2-4937-9421-4641dc6e96eb",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9a4e5dc-d4e3-4e60-8cdd-8fb404b54884",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorAccountManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{userIdInvalid}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "6cd8f685-0162-4ec2-b3f6-9b23dbef4f4b",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"AccountId\": \"{{childActiveAccountId}}\",\r\n  \"ContractReturnUrlDomainOverride\": \"https://efrain.limbicarc.com\"\r\n}\r\n\r\n"
            },
            "url": "{{BaseUrl}}/childupgrades"
          },
          "response": []
        },
        {
          "_postman_id": "1c0e5c4d-1142-491a-918d-91e400c6e222",
          "name": "Change Billing Info",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{childUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"NameOnCard\": \"Paul Dickinson\",\r\n  \"Card\": {\r\n    \"Number\": \"4111111111111111\",\r\n    \"ExpirationDate\": \"2019-12-22\",\r\n    \"Verification\": \"123\"\r\n  },\r\n  \"BillingAddress\": {\r\n\t  \"Line1\": \"10758 S Ozarks dr\",\r\n\t  \"Line2\": null,\r\n\t  \"City\": \"South Jordan\",\r\n\t  \"Province\": null,\r\n\t  \"PostalCode\": null,\r\n\t  \"Country\": \"Ceuta And Melilla\"\r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}/billinginfo"
          },
          "response": []
        },
        {
          "_postman_id": "50088c4b-5e1f-4455-8d83-1b326e0ddf62",
          "name": "Change Affiliate Info",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  "function randString(x){",
                  "    var s = \"\";",
                  "    while(s.length<x&&x>0){",
                  "        var r = Math.random();",
                  "        s+= (r<0.1?Math.floor(r*100):String.fromCharCode(Math.floor(r*26) + (r>0.5?97:65)));",
                  "    }",
                  "    return s;",
                  "}",
                  "",
                  "var sponsorCode= randString(10).toLowerCase();",
                  "",
                  "pm.globals.set(\"Sponscode\", sponsorCode);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{childUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"AffiliateInfo\": {\r\n    \"AutoPlacementMethod\": \"Weak\",\r\n    \"Tax\": {\r\n      \"Id\": \"544444444\",\r\n      \"Type\": \"SSN\"\r\n    },\r\n    \"PaymentMethod\": {\r\n      \"Ach\": {\r\n        \"BankName\": \"HDFC\",\r\n        \"BankAccountNumber\": \"12345678\",\r\n        \"BankRoutingNumber\": \"1234567\"\r\n      },\r\n      \"Paypal\": null,\r\n      \"Propay\": null,\r\n      \"Type\": \"Ach\"\r\n    },\r\n    \"SponsorCode\": \"{{Sponscode}}\"\r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}/affiliateinfo"
          },
          "response": []
        },
        {
          "_postman_id": "95a9eea2-4fd1-4940-acb3-fb7b24032755",
          "name": "Agree to Contract",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{childUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}/contract/agreed"
          },
          "response": []
        },
        {
          "_postman_id": "cb404374-f1ee-472b-9995-471099f00b8d",
          "name": "Renew Contract Url",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{childUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}/contract/url/renew"
          },
          "response": []
        },
        {
          "_postman_id": "2c76d713-7ad5-4cec-b299-ca4a4db88644",
          "name": "Process",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{childUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}/process"
          },
          "response": []
        },
        {
          "_postman_id": "65cd03ba-f9d2-48c5-af1d-14357670fc8c",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6f4d7e5-e73d-4f21-bb7f-64d5176ff974",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}"
          },
          "response": []
        },
        {
          "_postman_id": "2fb88ec0-ca28-4306-995c-01079eb1de23",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": ""
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades"
          },
          "response": []
        },
        {
          "_postman_id": "612c89c3-7a94-40cc-92d3-0a47f07e98fc",
          "name": "Get All Events",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f22b84e7-7bca-4f42-a546-0763b9299fa9",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/childupgrades/{{childUpgradeId}}/events"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "1e75856f-8e86-4066-8de4-5fd5ed90c802",
      "name": "Customer Upgrade",
      "description": null,
      "item": [
        {
          "_postman_id": "e28bd406-d38e-4190-95ab-99af29369a06",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6bfe1538-b33e-4c98-baac-c3f2ef211d6f",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "3867d240-4f3c-419f-896c-b3923e13365b",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\",\"AccountUser\",\"AdministratorAccountManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "baae5e9e-f3f8-4168-bb48-06a4b862fffa",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"AccountId\": \"{{activeCustomerId}}\",\r\n  \"ContractReturnUrlDomainOverride\": \"http://localhost:4200\"\r\n}\r\n\r\n"
            },
            "url": "{{BaseUrl}}/customerupgrades"
          },
          "response": []
        },
        {
          "_postman_id": "e985ee0c-e2bf-4ae8-bce0-045efaa01915",
          "name": "Change Affiliate Info",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  "function randString(x){",
                  "    var s = \"\";",
                  "    while(s.length<x&&x>0){",
                  "        var r = Math.random();",
                  "        s+= (r<0.1?Math.floor(r*100):String.fromCharCode(Math.floor(r*26) + (r>0.5?97:65)));",
                  "    }",
                  "    return s;",
                  "}",
                  "",
                  "var sponsorCode= randString(10).toLowerCase();",
                  "",
                  "pm.globals.set(\"Sponscode\", sponsorCode);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{customerUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"AffiliateInfo\": {\r\n    \"AutoPlacementMethod\": \"Weak\",\r\n    \"Tax\": {\r\n      \"Id\": \"1234567\",\r\n      \"Type\": \"SSN\"\r\n    },\r\n    \"PaymentMethod\": {\r\n    \"Paypal\": {\r\n        \"PaypalId\": \"aaaa@test.com\"\r\n      },\r\n      \"Type\": \"Paypal\"\r\n    },\r\n    \"SponsorCode\": \"{{Sponscode}}\"\r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/customerupgrades/{{customerUpgradeId}}/affiliateinfo"
          },
          "response": []
        },
        {
          "_postman_id": "6827c00d-3724-479c-b929-d8979430427b",
          "name": "Agree To Contract",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{customerUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/customerupgrades/{{customerUpgradeId}}/contract/agreed"
          },
          "response": []
        },
        {
          "_postman_id": "2aecb062-c0a6-4b00-b392-a26062e19ece",
          "name": "Renew Contract Url",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{customerUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/customerupgrades/{{customerUpgradeId}}/contract/url/renew"
          },
          "response": []
        },
        {
          "_postman_id": "a6633d21-665f-4c39-a557-c46de0372fc5",
          "name": "Process",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{customerUpgradeETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/customerupgrades/{{customerUpgradeId}}/process"
          },
          "response": []
        },
        {
          "_postman_id": "2c9819a5-b6c0-4d8e-8228-766f00fcce6a",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6f4d7e5-e73d-4f21-bb7f-64d5176ff974",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/customerupgrades/{{customerUpgradeId}}"
          },
          "response": []
        },
        {
          "_postman_id": "5bc5c4e8-b524-42ba-bf6d-9825b772774e",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "continuation-token",
                "value": "",
                "disabled": true
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "max-item-count",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/customerupgrades?createdBefore=2019-01-24",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "customerupgrades"
              ],
              "query": [
                {
                  "key": "createdOnOrAfter",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "createdBefore",
                  "value": "2019-01-24"
                },
                {
                  "key": "searchText",
                  "value": "Peddi Kishore",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "Complete",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "67ac5f9c-24fc-49f7-85c1-3e14fdbaefcc",
          "name": "Get All Events",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f22b84e7-7bca-4f42-a546-0763b9299fa9",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/customerupgrades/{{customerUpgradeId}}/events"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5fb8c431-9ded-4665-ad02-05633079a63e",
      "name": "Email Template",
      "description": null,
      "item": [
        {
          "_postman_id": "fad7f4c3-d538-437c-a53d-4f83d8e83f41",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6a5700f-b59c-4817-81a0-51d888e892d6",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "  postman.setGlobalVariable(\"userId\", jsonData.IdTokenPayload.UserId);",
                  "}",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "dea736ac-075b-481a-809c-7f39262edca7",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b09bc83-d4d1-4e19-9fcb-5b44fd517c8d",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\t{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorContentManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{userIdInvalid}}//token",
            "description": "Api method called: Create\n\nVariable set For : \"id', \"eTag\"\n\nExpect: Created (201)"
          },
          "response": []
        },
        {
          "_postman_id": "d2874042-1255-4277-8f85-0fc087d2f734",
          "name": "Add",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "17592d20-05a1-4a52-bc1b-c96241906b7e",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "139c163c-08b5-49e9-a7e0-da26041e6592",
                "exec": [
                  "",
                  "//postman.setEnvironmentVariable(\"emailTemplateId\", \"test\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Subject\": \"Terms and Conditions\",\r\n  \"Body\": \"{{firstname}} {{lastname}},  Here are the T&C you requested.  {{termsandconditions}}\"\r\n}"
            },
            "url": "{{BaseUrl}}/emailtemplates/test101",
            "description": "Api method called: Create\n\nVariable set For : \"id', \"eTag\"\n\nExpect: Created (201)"
          },
          "response": []
        },
        {
          "_postman_id": "7954d3a8-800a-4393-bf2c-710833f47042",
          "name": "Change",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "20ada5a4-b447-4915-908d-abd030cb51cd",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{emailTemplateETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Subject\": \"Terms and Conditions updated\",\r\n  \"Body\": \"abcd efgh,  Here are the T&C you requested.  my own conditions\",\r\n  \"Archived\": false\r\n}"
            },
            "url": "{{BaseUrl}}/emailtemplates/{{emailTemplateId}}",
            "description": "Api method called: ChangeArchived\n\nVariable set For : \"eTag\"\n\nExpect: OK (200)"
          },
          "response": []
        },
        {
          "_postman_id": "c0398e50-0928-41b1-a030-101b323e637b",
          "name": "Create Populated Email Template",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d67304ec-9907-47b8-865f-fb821729dabc",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"PlaceholderDictionary\": {        \r\n      \r\n       },\r\n  \"Version\": 2\r\n}"
            },
            "url": "{{BaseUrl}}/emailtemplates/{{emailTemplateId}}/populateemailtemplate",
            "description": "Api method called: ChangeArchived\n\nVariable set For : \"eTag\"\n\nExpect: OK (200)"
          },
          "response": []
        },
        {
          "_postman_id": "d841cfdf-5f49-4bf9-b3eb-90745bf89a43",
          "name": "Send",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a73abe74-e37d-4b9e-a7ba-17d7277c2ee5",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"PlaceholderDictionary\": {        \r\n        \"firstname\" : \"Paul\",\r\n        \"lastname\" : \"Dickinson\",\r\n        \"termsandconditions\" : \"TC\"},\r\n  \"Version\": 1,\r\n  \"To\": [\r\n    \"paul@zyto.com\"\r\n  ]\r\n}"
            },
            "url": "{{BaseUrl}}/emailtemplates/{{emailTemplateId}}/send",
            "description": "Api method called: ChangeArchived\n\nVariable set For : \"eTag\"\n\nExpect: OK (200)"
          },
          "response": []
        },
        {
          "_postman_id": "d9eea3ac-76e7-46e1-a11f-ab26cb312212",
          "name": "Get By Id",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "20c7c7ea-7b66-4ae9-b8a2-a50fe8cc48d9",
                "exec": [
                  "",
                  "",
                  "postman.setEnvironmentVariable(\"emailTemplateId\", \"test\");"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7052bed2-0e20-4f0e-af1c-b9cd0bb157f0",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/emailtemplates/{{emailTemplateId}}",
            "description": "Api method called: Get By Id\n\nVariable set For : \"id', \"eTag\"\n\nExpect: OK (200)"
          },
          "response": []
        },
        {
          "_postman_id": "5cdd32ec-001d-486c-99c7-987d0b145df6",
          "name": "Get By Id And Version",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5554a301-7f3c-4a2d-972e-7275183d34a4",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/emailtemplates/{{emailTemplateId}}/versions/3",
            "description": "Api method called: Get By Id And Version\n\nExpect: \n  - Return list is greated or equal to 1\n  - OK (200)"
          },
          "response": []
        },
        {
          "_postman_id": "bdbed866-7233-45d5-aeff-1ddb7a3e1f53",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae75c6da-46a6-41c6-82f4-d8b4b3efe58a",
                "exec": [
                  " pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "20"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/emailtemplates?archived=false",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "emailtemplates"
              ],
              "query": [
                {
                  "key": "archived",
                  "value": "false"
                }
              ]
            },
            "description": "Api method called: Get All\n\nExpect: \n  - Return list is greated or equal to 1\n  - OK (200)"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "0212b23a-1e7c-4e85-a937-4b4c6662c1f5",
      "name": "Key Performance Indicator Report",
      "description": null,
      "item": [
        {
          "_postman_id": "a7e142b8-20fe-4bfe-8292-db29eeaf1260",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f38704ad-c351-4afa-9014-4147f5335446",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "ba929936-59c5-44e5-9651-400688199c35",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorAccounting\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "d0054221-82e8-420b-8cc2-a0671acfcf07",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a99c28b-8185-4426-8703-05d11962c7d5",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7199c921-d2ad-4467-926f-bc6cd6ef4ef6",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreports/2"
          },
          "response": []
        },
        {
          "_postman_id": "f18b91c1-a0e1-4ac9-9d30-39e3963cbf22",
          "name": "Get Last",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9cea6571-0651-414e-84e0-ba460a9a1256",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreports/last"
          },
          "response": []
        },
        {
          "_postman_id": "99d7f990-122a-4271-b7a5-ac45159c3225",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "206224de-173f-417f-a59d-5ad8c866d5a1",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "20",
                "disabled": true
              },
              {
                "key": "continuation-token",
                "value": "",
                "disabled": true
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreports"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "33ccba12-2267-4a75-90b0-a159cca4be8b",
      "name": "Key Performance Indicator Report Run",
      "description": null,
      "item": [
        {
          "_postman_id": "a3caea8c-2016-4387-8273-83fba6d4b51b",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f38704ad-c351-4afa-9014-4147f5335446",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "23d37184-314d-4837-a5a5-eead60ee2aa7",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorSystemManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "595d2751-fdd3-4271-8818-3ccb4c0a6249",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreportruns"
          },
          "response": []
        },
        {
          "_postman_id": "2e43c038-19c0-4076-9ada-bc53834073bd",
          "name": "Cancel",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreportruns/{{keyPerformanceIndicatorReportRunId}}/cancel"
          },
          "response": []
        },
        {
          "_postman_id": "468ba8fb-7d38-4f24-a4e2-3adece4ea8fd",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6f4d7e5-e73d-4f21-bb7f-64d5176ff974",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreportruns/{{keyPerformanceIndicatorReportRunId}}"
          },
          "response": []
        },
        {
          "_postman_id": "f82f12de-9de7-439b-b7e3-6dda2e617b85",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": ""
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/keyperformanceindicatorreportruns"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "c00c3d59-bc7e-4f2c-8585-714cb42c271e",
      "name": "Payments",
      "description": null,
      "item": [
        {
          "_postman_id": "1d758b14-3e2b-424a-804f-fe126fb2d531",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "559d7fbc-2534-4701-88b2-6fbab2b92a36",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "     postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "cd7e585d-76ef-4775-89cb-134c01c44697",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorAccounting\",\"AdministratorAccountManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "9720e802-ff47-44ef-afdd-9bc95a62a13c",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4d1a729-8700-4e87-b1bf-b5c85f448110",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/payments/{{paymentId}}"
          },
          "response": []
        },
        {
          "_postman_id": "09093054-2fad-4f8c-8057-5ec497717822",
          "name": "Get By Id With Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4d1a729-8700-4e87-b1bf-b5c85f448110",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/payments/{{paymentId}}/withdetails"
          },
          "response": []
        },
        {
          "_postman_id": "050962ad-b3ae-4436-9adb-8162f574f875",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fbccd0ff-14e6-44b3-a899-5d818c50f617",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "5"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/payments?refundPaymentId=724002",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "payments"
              ],
              "query": [
                {
                  "key": "ids",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "type",
                  "value": "721623",
                  "disabled": true
                },
                {
                  "key": "accountId",
                  "value": "false",
                  "disabled": true
                },
                {
                  "key": "refundPaymentId",
                  "value": "724002"
                },
                {
                  "key": "hasNetSuiteId",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "createdOnOrAfter",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "createdBefore",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "max-item-count",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "continuation-token",
                  "value": "",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "6a08900b-b5d8-49ae-b89b-255133dda007",
          "name": "Get Excel File",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fbccd0ff-14e6-44b3-a899-5d818c50f617",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "5"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/payments/payments.xlsx?",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "payments",
                "payments.xlsx"
              ],
              "query": [
                {
                  "key": "searchtext",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "refundpaymentid",
                  "value": "703501",
                  "disabled": true
                },
                {
                  "key": "hasnetsuiteid",
                  "value": "false",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "79c05ab4-d420-4e4b-b1be-19b694a7ed5f",
          "name": "Get Excel File For Account",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fbccd0ff-14e6-44b3-a899-5d818c50f617",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "max-item-count",
                "value": "5"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/payments/accountpayments.xlsx?accountid={{accountId}}",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "payments",
                "accountpayments.xlsx"
              ],
              "query": [
                {
                  "key": "accountid",
                  "value": "{{accountId}}"
                },
                {
                  "key": "refundpaymentid",
                  "value": "703501",
                  "disabled": true
                },
                {
                  "key": "hasnetsuiteid",
                  "value": "false",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "f2703493-8071-468e-8278-ee697c64e78f",
          "name": "Refund",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "value": "{{paymentETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Amount\": 100,\r\n  \"CyberSourceId\": \"123\",\r\n  \"LineItems\": [\r\n    {\r\n      \"Amount\": 100,\r\n      \"Type\": \"IntialPurchase\"\r\n    }\r\n  ],\r\n  \"RefundType\": \"Refund\"\r\n}"
            },
            "url": "{{BaseUrl}}/payments/{{paymentId}}/refund"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "88bccebe-b93a-423a-93e9-effbae3a5b3f",
      "name": "Payment Import",
      "description": null,
      "item": [
        {
          "_postman_id": "003e636c-8b35-41d7-a327-fa118f4c01e9",
          "name": "Set Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "559d7fbc-2534-4701-88b2-6fbab2b92a36",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "     postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "0c67e7ee-009c-4162-b803-ae11d57a3017",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "a4a1b358-7d0c-4f31-8209-473d74af878a",
          "name": "Get By ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fe938a4b-2cdc-4e1b-8190-cad58a25d4c0",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/paymentimports/707501"
          },
          "response": []
        },
        {
          "_postman_id": "d0966172-80fc-426a-aa47-79fbb7df8562",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "165f3e64-96fa-4971-9e6c-326090f4833d",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/paymentimports"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a8c8a954-f6c7-406a-8615-7626a1874c4b",
      "name": "Payment Sync Run",
      "description": null,
      "item": [
        {
          "_postman_id": "9c448ecc-5ea3-464f-a534-22a7455d063d",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "559d7fbc-2534-4701-88b2-6fbab2b92a36",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "     postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "915164dd-231e-42ea-8df2-daa01ad12d7b",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\",\"AdministratorSystemManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "9c14e0be-70f8-436c-a883-096c1eced15e",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/paymentsyncruns"
          },
          "response": []
        },
        {
          "_postman_id": "44d89822-1968-4ae9-a965-47ef45cc3470",
          "name": "Cancel",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/paymentsyncruns/{{paymentSyncRunId}}/cancel"
          },
          "response": []
        },
        {
          "_postman_id": "c51da3ea-c65d-437c-a727-cffb7a80bb1a",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6f4d7e5-e73d-4f21-bb7f-64d5176ff974",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/paymentsyncruns/{{paymentSyncRunId}}"
          },
          "response": []
        },
        {
          "_postman_id": "e7355cc5-9570-43bd-b848-9ff77388ba69",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/subscriptionruns"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "56ee10d1-793f-4ebf-a92e-3fce6b6d7d74",
      "name": "Registrations",
      "description": null,
      "item": [
        {
          "_postman_id": "20713714-8ebc-4e48-ab71-97493a4ce2e2",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7014e5d3-b06f-4b08-86d6-67286ac4a89b",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "49974809-ff66-4cee-a1db-60ccc6578c67",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"AdministratorAccountManager\",\"SystemAdmin\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "658d7933-9c73-430b-be82-0cd42b6b7c6c",
          "name": "Get All Events",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a8f81d6c-0c11-41f6-9af2-ae0dab9da8bf",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              },
              {
                "key": "max-item-count",
                "value": "5",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/registrations/{{registrationId}}/events"
          },
          "response": []
        },
        {
          "_postman_id": "fa804eea-b02d-49c3-81fb-3c6743761e43",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "405d090d-02ca-49ef-8cbf-36c79ab7e988",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              },
              {
                "key": "max-item-count",
                "value": "5",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{BaseUrl}}/registrations?searchText={{AccountName}}",
              "host": [
                "{{BaseUrl}}"
              ],
              "path": [
                "registrations"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "complete",
                  "disabled": true
                },
                {
                  "key": "createdBefore",
                  "value": "2018-12-28",
                  "disabled": true
                },
                {
                  "key": "createdOnOrAfter",
                  "value": "2018-12-27",
                  "disabled": true
                },
                {
                  "key": "searchText",
                  "value": "{{AccountName}}"
                },
                {
                  "key": "seachText",
                  "value": "{{AccountBusinessName}}",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "e12751db-c6dd-434e-8bc4-f2d8e1378215",
      "name": "Subscription Run",
      "description": null,
      "item": [
        {
          "_postman_id": "641d1165-ba3d-43b7-8c86-1cd84970fba2",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6bfe1538-b33e-4c98-baac-c3f2ef211d6f",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\": \"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "a46b84f7-107d-4d43-af9b-5ec25ca0c6bb",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\", \"AdministratorSystemManager\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "deceb624-24e1-44cb-a46c-ef2163f04b7d",
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d4ef5df-1408-4d36-9cdf-fd5be256af6f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/subscriptionruns/"
          },
          "response": []
        },
        {
          "_postman_id": "c8f36c44-6974-4a9a-bf10-0178b3bb48f4",
          "name": "Cancel",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fa7e8c42-77f2-41ea-bb06-a8c377f89ca5",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e25561e9-75b9-4388-acc7-30b2cc49fcb6",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/subscriptionruns/{{subscriptionRunId}}/cancel"
          },
          "response": []
        },
        {
          "_postman_id": "13533b97-4109-489c-bf09-1143f9277202",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6f4d7e5-e73d-4f21-bb7f-64d5176ff974",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/subscriptionruns/{{subscriptionRunId}}"
          },
          "response": []
        },
        {
          "_postman_id": "cc093b1b-9940-4d47-a83a-95cefd926581",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41ee179e-fbdb-4a33-a8a6-2b652454041f",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "max-item-count",
                "value": "2",
                "type": "text",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/subscriptionruns"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "2e607b65-6577-4ffb-a5ef-a936f893b3e3",
      "name": "Users",
      "description": null,
      "item": [
        {
          "_postman_id": "7cbe0fa7-4df4-4838-b0b8-49b855804936",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b36ea62-55df-46e1-a6f5-c9456413073a",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "748fd620-b477-4a0d-9e78-20a3d36f94e5",
          "name": "Create Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": null\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "548ecd43-168b-413c-8746-3222939fcaf2",
          "name": "Update Roles",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "83b42a28-f72d-4b4c-88fe-5f4128b972ec",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/roles/update"
          },
          "response": []
        },
        {
          "_postman_id": "e6c216e9-bde4-4bec-b074-0db166242e5c",
          "name": "Change Password",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "21209683-b0ce-4d1c-8c59-0f773cb0ab76",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7bc74a9d-877f-40d3-9e52-1871390d4d84",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Password\": \"password1234\"\r\n}"
            },
            "url": "{{BaseUrl}}/users/auth0|5c0fddf0d079623e3b02a31a/password"
          },
          "response": []
        },
        {
          "_postman_id": "52a21eaf-06d9-4edd-9478-f821763c538a",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e88d227-846b-4fe1-aff6-026af47deb17",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}"
          },
          "response": []
        },
        {
          "_postman_id": "8d4486ff-a959-40ab-9e21-e4d2ac93b820",
          "name": "Get All",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5c281457-f5ae-4d16-9ca5-35a17487237a",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "continuation-token",
                "value": ""
              },
              {
                "key": "max-item-count",
                "value": "5",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/users"
          },
          "response": []
        },
        {
          "_postman_id": "72dc4b37-bd6c-4aee-8e7f-fe5da823ab98",
          "name": "Get Roles",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1080301f-28de-4042-8ce5-32c2589818be",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/users/roles"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "41d2309a-26ae-40ca-ad82-7055beea844a",
      "name": "Vendor",
      "description": null,
      "item": [
        {
          "_postman_id": "4e63ba0e-8178-492d-b18a-05b00a75b34c",
          "name": "Setup Autho Token User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7014e5d3-b06f-4b08-86d6-67286ac4a89b",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is OK (200)\"] = responseCode.code === 200;",
                  "",
                  "//Set Variables ",
                  "if (responseCode.code == 200) ",
                  "{",
                  "     var jsonData = JSON.parse(responseBody);",
                  "      ",
                  "  ",
                  "  postman.setGlobalVariable(\"auth0Token\", jsonData.AuthenticationResponse.IdToken);",
                  "}",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"UserName\": \"{{UserName}}\",\n  \"Password\":\"{{Password}}\"\n}"
            },
            "url": "{{BaseUrl}}/users/login"
          },
          "response": []
        },
        {
          "_postman_id": "f4ae710d-42a6-4d2d-9e2e-c578ef249e11",
          "name": "Create Token  ",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f96cb641-4158-41f9-9332-1398aafedcc9",
                "exec": [
                  "//Statuse Code Assertions",
                  "tests[\"Status code is Created (200)\"] = responseCode.code === 200;",
                  "",
                  "",
                  "    var jsonData = JSON.stringify(responseBody);",
                  "    postman.setGlobalVariable(\"auth1Token\",jsonData);",
                  "  var timingTest = postman.getEnvironmentVariable(\"timingTest\");",
                  "  tests[\"Response time is less than \"+  responseTime / 1000 + \" seconds\"] = responseTime < timingTest;",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth0Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Roles\": [\r\n    \"SystemAdmin\",\"AdministratorAccountManager\",\"AccountUser\"\r\n  ],\r\n  \"InvertRoles\": true,\r\n  \"UseNullForUserId\": false,\r\n  \"ExpirationDate\": \"2019-12-31T05:11:27.690Z\"\r\n}"
            },
            "url": "{{BaseUrl}}/users/{{administratorUserId}}/token"
          },
          "response": []
        },
        {
          "_postman_id": "d4ea1b43-0fb9-4fc9-8ec2-834610040e7b",
          "name": "Get By Id",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ddae27c3-8f01-46de-ab1d-c8c0d4d883e8",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a87f84e1-0c98-45da-aac7-ebc5e97f318f",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/vendors/{{vendorId}}"
          },
          "response": []
        },
        {
          "_postman_id": "599a71b6-52b3-4077-aaa0-f3755ca73e86",
          "name": "Get By ID with Cache",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ddae27c3-8f01-46de-ab1d-c8c0d4d883e8",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "a87f84e1-0c98-45da-aac7-ebc5e97f318f",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{BaseUrl}}/vendors/cache/{{vendorId}}"
          },
          "response": []
        },
        {
          "_postman_id": "27144b64-416f-47eb-a23a-18c642f8204e",
          "name": "Change Tax Info",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb805d55-21be-46d5-b648-130967567870",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "bearer {{auth1Token}}",
                "type": "text"
              },
              {
                "key": "If-Match",
                "value": "{{vendorETag}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Tax\": {\r\n    \"Id\": \"544-44-4445\",\r\n    \"Type\": \"SSN\"\r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/vendors/{{vendorId}}/taxinfo"
          },
          "response": []
        },
        {
          "_postman_id": "c162ca32-a2e6-4031-8128-35b62cb59fac",
          "name": "Change Payment Method",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb805d55-21be-46d5-b648-130967567870",
                "exec": [
                  "pm.test(\"Response should be UnAuthorized\", () => {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "bearer {{auth1Token}}"
              },
              {
                "key": "If-Match",
                "type": "text",
                "value": "{{vendorETag}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"PaymentMethod\": {\r\n     \r\n       \"Paypal\": {\r\n        \"PaypalId\": \"test100\"\r\n      },\r\n      \"Type\": \"Paypal\"\r\n    \r\n  }\r\n}"
            },
            "url": "{{BaseUrl}}/vendors/{{vendorId}}/paymentmethod"
          },
          "response": []
        }
      ]
    }
  ]
}